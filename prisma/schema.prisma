generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  prestataire
}

model User {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(100)
  email        String      @unique @db.VarChar(50)
  password     String      @db.VarChar(255)
  address      String?     @db.VarChar(50)
  role         Role        @default(prestataire)
  availability String?     @db.VarChar(50)
  description  String?     @db.Text
  telephone    String?     @unique @db.VarChar(20)
  profil       String?     @db.VarChar(255)

  projects     Project[]
  socialLinks  SocialLink[]
  services     Service[]
  domains      UserDomain[]
  userServices UserService[] // Relation n:m avec Service
}

model Domain {
  id       Int       @id @default(autoincrement())
  name     String    @unique  // Ajoutez @unique pour garantir l'unicit√©

  users    UserDomain[]
  projects Project[]
  services Service[]  // Relation 1:n avec Service
}


model Project {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(100)
  description String?     @db.Text
  companyName String?     @db.VarChar(100)

  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     Int

  domain      Domain      @relation(fields: [domain_id], references: [id], onDelete: Cascade)
  domain_id   Int

  startDate   DateTime
  endDate     DateTime?

  images      ProjectImage[]
}

model Service {
  id       Int       @id @default(autoincrement())
  name      String   @unique

  user     User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  Int

  domain   Domain    @relation(fields: [domain_id], references: [id], onDelete: Cascade)
  domain_id Int

  userServices UserService[] // Relation n:m avec User
}

model UserDomain {
  user      User     @relation(fields: [user_id], references: [id])
  user_id   Int
  domain    Domain   @relation(fields: [domain_id], references: [id])
  domain_id Int

  @@id([user_id, domain_id])
}

model UserService {
  user      User     @relation(fields: [user_id], references: [id])
  user_id   Int
  service   Service  @relation(fields: [service_id], references: [id])
  service_id Int

  @@id([user_id, service_id])
}

model ProjectImage {
  project   Project  @relation(fields: [project_id], references: [id])
  project_id Int
  image     Image    @relation(fields: [image_id], references: [id])
  image_id  Int

  @@id([project_id, image_id])
}

model Image {
  id      Int       @id @default(autoincrement())
  name    String    @db.Text

  projects ProjectImage[]
}

model SocialLink {
  id      Int       @id @default(autoincrement())
  url     String    @db.Text
  type    String    @db.VarChar(100)

  user    User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}
